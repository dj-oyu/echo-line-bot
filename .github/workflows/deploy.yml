name: Deploy LINE AI Chatbot

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: cdk/package-lock.json
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
        
    - name: Install Python dependencies
      run: |
        uv sync
        
    - name: Install CDK dependencies
      run: |
        cd cdk
        npm ci
        
    - name: Build CDK
      run: |
        cd cdk
        npm run build
        
    - name: Run CDK tests
      run: |
        cd cdk
        npm test
        
    - name: CDK Synthesize
      run: |
        cd cdk
        npm run cdk synth
      env:
        CHANNEL_ACCESS_TOKEN: ${{ secrets.CHANNEL_ACCESS_TOKEN }}
        CHANNEL_SECRET: ${{ secrets.CHANNEL_SECRET }}
        SAMBA_NOVA_API_KEY: ${{ secrets.SAMBA_NOVA_API_KEY }}

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: cdk/package-lock.json
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
        
    - name: Install Python dependencies
      run: |
        uv sync
        
    - name: Install CDK dependencies
      run: |
        cd cdk
        npm ci
        
    - name: Build CDK
      run: |
        cd cdk
        npm run build
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1
        
    - name: Deploy to AWS
      run: |
        cd cdk
        npm run cdk deploy -- --require-approval never
      env:
        CHANNEL_ACCESS_TOKEN: ${{ secrets.CHANNEL_ACCESS_TOKEN }}
        CHANNEL_SECRET: ${{ secrets.CHANNEL_SECRET }}
        SAMBA_NOVA_API_KEY: ${{ secrets.SAMBA_NOVA_API_KEY }}
        
    - name: Notify deployment success
      if: success()
      run: |
        echo "üöÄ Deployment successful!"
        echo "API Gateway URL: $(aws cloudformation describe-stacks --stack-name LineEchoStack --query 'Stacks[0].Outputs[?OutputKey==\`ApiGatewayUrl\`].OutputValue' --output text)"
        
    - name: Notify deployment failure
      if: failure()
      run: |
        echo "‚ùå Deployment failed!"
        exit 1